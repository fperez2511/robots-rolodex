{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","Container","Row","sm","md","lg","monsters","map","Col","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,WCKKC,G,MAAW,SAACR,GAAD,OACpB,cAACS,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACKb,EAAMc,SAASC,KAAI,SAAAX,GAAO,OACvB,cAACY,EAAA,EAAD,CAAuBf,UAAU,YAAjC,SACI,cAAC,EAAD,CAAuBG,QAASA,GAArBA,EAAQC,KADbD,EAAQC,aCbrBY,G,YAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIlB,UAAU,SACVmB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCwCHG,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAlBtC,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAS7C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bd,EADD,EACCA,SAAUW,EADX,EACWA,YACZU,EAAmBrB,EAASsB,QAAO,SAAAhC,GAAO,OAC9CA,EAAQE,KAAK+B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKpC,UAAU,MAAf,UACE,gDACA,cAAC,EAAD,CACEiB,YAAY,gBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUL,SAAUqB,W,GAtCVI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1c52f5f1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} />\r\n        <h2> { props.monster.name} </h2>\r\n        <p> { props.monster.email } </p>\r\n    </div>\r\n);","import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n/* \r\n<div className='card-list'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div> \r\n*/\r\n\r\nexport const CardList = (props) => (\r\n    <Container>\r\n        <Row sm={2} md={3} lg={4}>\r\n            {props.monsters.map(monster => (\r\n                <Col key={monster.id}  className=\"mt-3 mb-3\">\r\n                    <Card key={monster.id} monster={monster} />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    </Container >\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type=\"search\" \r\n        placeholder={placeholder} \r\n        onChange={handleChange} \r\n    />\r\n);","import React from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport './App.css';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    // Old school bind the context of \"this\" for our methods\n    //this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  // THE BEAUTY with arrow function style then we don't have to bind \"this\" at the constructor.\n  // Arrow Functions sintax bonus: automatic Lexical Scoping, they bind \"this\" in the place they [functions] were defined [e.g. App class].\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Robots Rolodex</h1>\n        <SearchBox \n          placeholder='search robots'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}